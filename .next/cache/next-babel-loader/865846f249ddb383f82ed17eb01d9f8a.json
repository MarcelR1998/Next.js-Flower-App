{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcel\\\\Documents\\\\kodprojekt\\\\arbetsprovMarcelWillAndSkill\\\\components\\\\Comments.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Comment from './Comment';\n\nclass Comments extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"state\", {\n      comments: [],\n      loaded: false,\n      index: null,\n      userComment: \"\"\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        userComment: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"post\", async message => {\n      if (message !== \"\") {\n        await fetch(`https://flowers-mock-data.firebaseio.com/comments/MarcelR1998/${this.state.index}.json`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            comment: message\n          })\n        }).then(res => {\n          console.log(res);\n          /*             location.reload(); */\n        }).catch(err => console.error(err));\n      }\n    });\n\n    this.post = this.post.bind(this);\n  }\n\n  async componentDidMount() {\n    const res = await fetch('https://flowers-mock-data.firebaseio.com/comments.json');\n    const data = await res.json();\n    this.setState({\n      comments: Object.entries(data),\n      loaded: true,\n      index: this.props.index\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"jsx-1212496929\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      className: \"jsx-1212496929\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Comments\"), __jsx(\"div\", {\n      id: \"commentForm\",\n      className: \"jsx-1212496929\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, __jsx(\"textarea\", {\n      id: \"\",\n      cols: \"30\",\n      rows: \"2\",\n      value: this.state.userComment,\n      onChange: this.handleChange,\n      className: \"jsx-1212496929\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), __jsx(\"button\", {\n      onClick: () => this.post(this.state.userComment),\n      className: \"jsx-1212496929\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Comment\")), this.state.loaded ? this.state.comments.map(user => user[1][this.state.index] ? Object.entries(user[1][this.state.index]).map((myComment, index) => myComment[1].comment ? __jsx(\"div\", {\n      key: user[0] + index,\n      className: \"jsx-1212496929\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, __jsx(Comment, {\n      user: user[0],\n      comment: myComment[1].comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 37\n      }\n    })) : null) : null) : null, __jsx(_JSXStyle, {\n      id: \"1212496929\",\n      __self: this\n    }, \"#commentForm.jsx-1212496929{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;}textarea.jsx-1212496929{resize:none;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFyY2VsXFxEb2N1bWVudHNcXGtvZHByb2pla3RcXGFyYmV0c3Byb3ZNYXJjZWxXaWxsQW5kU2tpbGxcXGNvbXBvbmVudHNcXENvbW1lbnRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9FNEIsQUFHa0MsQUFJRCxZQUNELFdBQ2YsbURBTGUsV0FDZiIsImZpbGUiOiJDOlxcVXNlcnNcXE1hcmNlbFxcRG9jdW1lbnRzXFxrb2Rwcm9qZWt0XFxhcmJldHNwcm92TWFyY2VsV2lsbEFuZFNraWxsXFxjb21wb25lbnRzXFxDb21tZW50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21tZW50IGZyb20gJy4vQ29tbWVudCc7XHJcblxyXG5jbGFzcyBDb21tZW50cyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMucG9zdCA9IHRoaXMucG9zdC5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRlID0ge1xyXG4gICAgICAgIGNvbW1lbnRzOiBbXSxcclxuICAgICAgICBsb2FkZWQ6IGZhbHNlLFxyXG4gICAgICAgIGluZGV4OiBudWxsLFxyXG4gICAgICAgIHVzZXJDb21tZW50OiBcIlwiLFxyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2Zsb3dlcnMtbW9jay1kYXRhLmZpcmViYXNlaW8uY29tL2NvbW1lbnRzLmpzb24nKTtcclxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcclxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgY29tbWVudHM6IE9iamVjdC5lbnRyaWVzKGRhdGEpLFxyXG4gICAgICAgICAgICBsb2FkZWQ6IHRydWUsXHJcbiAgICAgICAgICAgIGluZGV4OiB0aGlzLnByb3BzLmluZGV4LFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGhhbmRsZUNoYW5nZSA9IChlKSA9PiB7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIHVzZXJDb21tZW50OiBlLnRhcmdldC52YWx1ZVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcG9zdCA9IGFzeW5jIChtZXNzYWdlKSA9PiB7XHJcblxyXG4gICAgICAgIGlmIChtZXNzYWdlICE9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIGF3YWl0IGZldGNoKGBodHRwczovL2Zsb3dlcnMtbW9jay1kYXRhLmZpcmViYXNlaW8uY29tL2NvbW1lbnRzL01hcmNlbFIxOTk4LyR7dGhpcy5zdGF0ZS5pbmRleH0uanNvbmAsIHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxyXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGNvbW1lbnQ6IG1lc3NhZ2UgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgIC8qICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOyAqL1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcihlcnIpKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgIDxoMj5Db21tZW50czwvaDI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGlkPVwiY29tbWVudEZvcm1cIj5cclxuICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgaWQ9XCJcIiBjb2xzPVwiMzBcIiByb3dzPVwiMlwiIHZhbHVlPXt0aGlzLnN0YXRlLnVzZXJDb21tZW50fSBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiB0aGlzLnBvc3QodGhpcy5zdGF0ZS51c2VyQ29tbWVudCl9PkNvbW1lbnQ8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAge3RoaXMuc3RhdGUubG9hZGVkID8gdGhpcy5zdGF0ZS5jb21tZW50cy5tYXAodXNlciA9PiAoXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlclsxXVt0aGlzLnN0YXRlLmluZGV4XSA/IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmVudHJpZXModXNlclsxXVt0aGlzLnN0YXRlLmluZGV4XSkubWFwKChteUNvbW1lbnQsIGluZGV4KSA9PiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBteUNvbW1lbnRbMV0uY29tbWVudCA/XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e3VzZXJbMF0gKyBpbmRleH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb21tZW50IHVzZXI9e3VzZXJbMF19IGNvbW1lbnQ9e215Q29tbWVudFsxXS5jb21tZW50fSAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbnVsbFxyXG4gICAgICAgICAgICAgICAgICAgICAgICApKVxyXG4gICAgICAgICAgICAgICAgICAgICkgOiBudWxsXHJcbiAgICAgICAgICAgICAgICApKSA6IG51bGx9XHJcbiAgICAgICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICAjY29tbWVudEZvcm17XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRleHRhcmVhIHtcclxuICAgICAgICAgICAgICAgICAgICByZXNpemU6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvbW1lbnRzOyJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Marcel\\\\\\\\Documents\\\\\\\\kodprojekt\\\\\\\\arbetsprovMarcelWillAndSkill\\\\\\\\components\\\\\\\\Comments.js */\"));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/Marcel/Documents/kodprojekt/arbetsprovMarcelWillAndSkill/components/Comments.js"],"names":["Comment","Comments","React","Component","constructor","comments","loaded","index","userComment","e","setState","target","value","message","fetch","state","method","headers","body","JSON","stringify","comment","then","res","console","log","catch","err","error","post","bind","componentDidMount","data","json","Object","entries","props","render","handleChange","map","user","myComment"],"mappings":";;;;;;;AAAA,OAAOA,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBC,KAAK,CAACC,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,GAAG;AACV;;AADU,mCAKN;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,MAAM,EAAE,KAFJ;AAGJC,MAAAA,KAAK,EAAE,IAHH;AAIJC,MAAAA,WAAW,EAAE;AAJT,KALM;;AAAA,0CAsBEC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACVF,QAAAA,WAAW,EAAEC,CAAC,CAACE,MAAF,CAASC;AADZ,OAAd;AAGH,KA1Ba;;AAAA,kCA4BP,MAAOC,OAAP,IAAmB;AAEtB,UAAIA,OAAO,KAAK,EAAhB,EAAoB;AAChB,cAAMC,KAAK,CAAE,iEAAgE,KAAKC,KAAL,CAAWR,KAAM,OAAnF,EAA2F;AAClGS,UAAAA,MAAM,EAAE,MAD0F;AAElGC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAFyF;AAKlGC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,YAAAA,OAAO,EAAER;AAAX,WAAf;AAL4F,SAA3F,CAAL,CAODS,IAPC,CAOIC,GAAG,IAAI;AACTC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACH,SAVC,EAWDG,KAXC,CAWKC,GAAG,IAAIH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAXZ,CAAN;AAYH;AACJ,KA5Ca;;AAEV,SAAKE,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACH;;AASD,QAAMC,iBAAN,GAA0B;AACtB,UAAMR,GAAG,GAAG,MAAMT,KAAK,CAAC,wDAAD,CAAvB;AACA,UAAMkB,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAJ,EAAnB;AACA,SAAKvB,QAAL,CAAc;AACVL,MAAAA,QAAQ,EAAE6B,MAAM,CAACC,OAAP,CAAeH,IAAf,CADA;AAEV1B,MAAAA,MAAM,EAAE,IAFE;AAGVC,MAAAA,KAAK,EAAE,KAAK6B,KAAL,CAAW7B;AAHR,KAAd;AAKH;;AA0BD8B,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,EAAE,EAAC,EAAb;AAAgB,MAAA,IAAI,EAAC,IAArB;AAA0B,MAAA,IAAI,EAAC,GAA/B;AAAmC,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWP,WAArD;AAAkE,MAAA,QAAQ,EAAE,KAAK8B,YAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKT,IAAL,CAAU,KAAKd,KAAL,CAAWP,WAArB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAFJ,EAMK,KAAKO,KAAL,CAAWT,MAAX,GAAoB,KAAKS,KAAL,CAAWV,QAAX,CAAoBkC,GAApB,CAAwBC,IAAI,IAC7CA,IAAI,CAAC,CAAD,CAAJ,CAAQ,KAAKzB,KAAL,CAAWR,KAAnB,IACI2B,MAAM,CAACC,OAAP,CAAeK,IAAI,CAAC,CAAD,CAAJ,CAAQ,KAAKzB,KAAL,CAAWR,KAAnB,CAAf,EAA0CgC,GAA1C,CAA8C,CAACE,SAAD,EAAYlC,KAAZ,KAC1CkC,SAAS,CAAC,CAAD,CAAT,CAAapB,OAAb,GACI;AAAK,MAAA,GAAG,EAAEmB,IAAI,CAAC,CAAD,CAAJ,GAAUjC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AAAS,MAAA,IAAI,EAAEiC,IAAI,CAAC,CAAD,CAAnB;AAAwB,MAAA,OAAO,EAAEC,SAAS,CAAC,CAAD,CAAT,CAAapB,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,GAIM,IALV,CADJ,GAQI,IATa,CAApB,GAUI,IAhBT;AAAA;AAAA;AAAA,k+IADJ;AA8BH;;AA9EkC;;AAiFvC,eAAepB,QAAf","sourcesContent":["import Comment from './Comment';\r\n\r\nclass Comments extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.post = this.post.bind(this);\r\n    }\r\n\r\n    state = {\r\n        comments: [],\r\n        loaded: false,\r\n        index: null,\r\n        userComment: \"\",\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await fetch('https://flowers-mock-data.firebaseio.com/comments.json');\r\n        const data = await res.json();\r\n        this.setState({\r\n            comments: Object.entries(data),\r\n            loaded: true,\r\n            index: this.props.index,\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            userComment: e.target.value\r\n        })\r\n    }\r\n\r\n    post = async (message) => {\r\n\r\n        if (message !== \"\") {\r\n            await fetch(`https://flowers-mock-data.firebaseio.com/comments/MarcelR1998/${this.state.index}.json`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ comment: message })\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    /*             location.reload(); */\r\n                })\r\n                .catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Comments</h2>\r\n                <div id=\"commentForm\">\r\n                    <textarea id=\"\" cols=\"30\" rows=\"2\" value={this.state.userComment} onChange={this.handleChange} />\r\n                    <button onClick={() => this.post(this.state.userComment)}>Comment</button>\r\n                </div>\r\n                {this.state.loaded ? this.state.comments.map(user => (\r\n                    user[1][this.state.index] ? (\r\n                        Object.entries(user[1][this.state.index]).map((myComment, index) => (\r\n                            myComment[1].comment ?\r\n                                <div key={user[0] + index}>\r\n                                    <Comment user={user[0]} comment={myComment[1].comment} />\r\n                                </div>\r\n                                : null\r\n                        ))\r\n                    ) : null\r\n                )) : null}\r\n                <style jsx>{`\r\n                #commentForm{\r\n                    display: flex;\r\n                    width: 100%;\r\n                }\r\n                textarea {\r\n                    resize: none;\r\n                    width: 100%;\r\n                }\r\n                `}</style>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcel\\\\Documents\\\\kodprojekt\\\\arbetsprovMarcelWillAndSkill\\\\components\\\\Auth.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport app from \"./base.js\";\nexport const AuthContext = React.createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n  useEffect(() => {\n    app.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setPending(false);\n    });\n  }, []);\n\n  if (pending) {\n    return __jsx(React.Fragment, null, \"Loading...\");\n  }\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      currentUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/Marcel/Documents/kodprojekt/arbetsprovMarcelWillAndSkill/components/Auth.js"],"names":["app","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","useState","pending","setPending","useEffect","auth","onAuthStateChanged","user"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,WAAhB;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,CAACC,aAAN,EAApB;AAEP,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,IAAD,CAAtC;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACZX,IAAAA,GAAG,CAACY,IAAJ,GAAWC,kBAAX,CAA+BC,IAAD,IAAU;AACpCP,MAAAA,cAAc,CAACO,IAAD,CAAd;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,OAAJ,EAAa;AACT,WAAO,yCAAP;AACH;;AAED,SACI,MAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHH,MAAAA;AADG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,QALL,CADJ;AASH,CAxBM","sourcesContent":["import app from \"./base.js\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [pending, setPending] = useState(true);\r\n\r\n    useEffect(() => {\r\n        app.auth().onAuthStateChanged((user) => {\r\n            setCurrentUser(user)\r\n            setPending(false)\r\n        });\r\n    }, []);\r\n\r\n    if (pending) {\r\n        return <>Loading...</>\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcel\\\\Documents\\\\kodprojekt\\\\arbetsprovMarcelWillAndSkill\\\\pages\\\\flower.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport Comments from '../components/Comments';\n\nclass Flower extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      searchTerm: \"\",\n      data: [],\n      flowerIndex: null\n    });\n  }\n\n  async componentDidMount() {\n    const res = await fetch('https://flowers-mock-data.firebaseio.com/flowers.json');\n    const data = await res.json();\n    this.setState({\n      searchTerm: decodeURIComponent(window.location.search.slice(8)),\n      data: data\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-3506942222\" + \" \" + \"centerLayout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, this.state.data.map(itemToFindIndex => {\n      if (itemToFindIndex.common_name == this.state.searchTerm) {\n        __jsx(Comments, {\n          flower: this.state.data.indexOf(itemToFindIndex),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }\n        });\n        /* this.setState({\r\n            flowerIndex: this.state.data.indexOf(itemToFindIndex)\r\n        }); */\n\n      }\n    }), this.state.data.filter(flower => flower.common_name == this.state.searchTerm).map(flower => __jsx(\"div\", {\n      key: flower.common_name,\n      className: \"jsx-3506942222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      src: flower.cover_image,\n      alt: \"\",\n      className: \"jsx-3506942222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }), __jsx(\"h1\", {\n      className: \"jsx-3506942222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, flower.common_name), __jsx(\"p\", {\n      className: \"jsx-3506942222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, \"Latin name: \", flower.latin_name), __jsx(\"p\", {\n      className: \"jsx-3506942222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, flower.notes), __jsx(\"p\", {\n      className: \"jsx-3506942222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }, \"Blooming season: \", flower.blooming_season), __jsx(\"h3\", {\n      className: \"jsx-3506942222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, \"Soil:\"), flower.soil.map(item => __jsx(\"div\", {\n      key: item,\n      className: \"jsx-3506942222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }\n    }, __jsx(\"p\", {\n      className: \"jsx-3506942222\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }, item))))), __jsx(_JSXStyle, {\n      id: \"3506942222\",\n      __self: this\n    }, \"img.jsx-3506942222{max-width:600px;max-height:400px;margin-top:2em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFyY2VsXFxEb2N1bWVudHNcXGtvZHByb2pla3RcXGFyYmV0c3Byb3ZNYXJjZWxXaWxsQW5kU2tpbGxcXHBhZ2VzXFxmbG93ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeURnQyxBQUd5QyxnQkFDQyxpQkFDRixlQUNuQiIsImZpbGUiOiJDOlxcVXNlcnNcXE1hcmNlbFxcRG9jdW1lbnRzXFxrb2Rwcm9qZWt0XFxhcmJldHNwcm92TWFyY2VsV2lsbEFuZFNraWxsXFxwYWdlc1xcZmxvd2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XHJcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xyXG5pbXBvcnQgQ29tbWVudHMgZnJvbSAnLi4vY29tcG9uZW50cy9Db21tZW50cydcclxuXHJcbmNsYXNzIEZsb3dlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICBzdGF0ZSA9IHtcclxuICAgICAgICBzZWFyY2hUZXJtOiBcIlwiLFxyXG4gICAgICAgIGRhdGE6IFtdLFxyXG4gICAgICAgIGZsb3dlckluZGV4OiBudWxsLFxyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2Zsb3dlcnMtbW9jay1kYXRhLmZpcmViYXNlaW8uY29tL2Zsb3dlcnMuanNvbicpO1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICBzZWFyY2hUZXJtOiBkZWNvZGVVUklDb21wb25lbnQod2luZG93LmxvY2F0aW9uLnNlYXJjaC5zbGljZSg4KSksXHJcbiAgICAgICAgICAgIGRhdGE6IGRhdGEsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcblxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxMYXlvdXQ+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNlbnRlckxheW91dFwiPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUuZGF0YS5tYXAoaXRlbVRvRmluZEluZGV4ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtVG9GaW5kSW5kZXguY29tbW9uX25hbWUgPT0gdGhpcy5zdGF0ZS5zZWFyY2hUZXJtKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb21tZW50cyBmbG93ZXI9e3RoaXMuc3RhdGUuZGF0YS5pbmRleE9mKGl0ZW1Ub0ZpbmRJbmRleCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsb3dlckluZGV4OiB0aGlzLnN0YXRlLmRhdGEuaW5kZXhPZihpdGVtVG9GaW5kSW5kZXgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7ICovXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUuZGF0YS5maWx0ZXIoZmxvd2VyID0+IGZsb3dlci5jb21tb25fbmFtZSA9PSB0aGlzLnN0YXRlLnNlYXJjaFRlcm0pLm1hcChmbG93ZXIgPT4gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e2Zsb3dlci5jb21tb25fbmFtZX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2Zsb3dlci5jb3Zlcl9pbWFnZX0gYWx0PVwiXCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+e2Zsb3dlci5jb21tb25fbmFtZX08L2gxPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPkxhdGluIG5hbWU6IHtmbG93ZXIubGF0aW5fbmFtZX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e2Zsb3dlci5ub3Rlc308L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+Qmxvb21pbmcgc2Vhc29uOiB7Zmxvd2VyLmJsb29taW5nX3NlYXNvbn08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPlNvaWw6PC9oMz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Zmxvd2VyLnNvaWwubWFwKGl0ZW0gPT4gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17aXRlbX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD57aXRlbX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICkpXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogNjAwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQwMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAyZW07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L0xheW91dD5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGbG93ZXI7Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Marcel\\\\\\\\Documents\\\\\\\\kodprojekt\\\\\\\\arbetsprovMarcelWillAndSkill\\\\\\\\pages\\\\\\\\flower.js */\")));\n  }\n\n}\n\nexport default Flower;","map":{"version":3,"sources":["C:/Users/Marcel/Documents/kodprojekt/arbetsprovMarcelWillAndSkill/pages/flower.js"],"names":["Fetch","Layout","Comments","Flower","React","Component","searchTerm","data","flowerIndex","componentDidMount","res","fetch","json","setState","decodeURIComponent","window","location","search","slice","render","state","map","itemToFindIndex","common_name","indexOf","filter","flower","cover_image","latin_name","notes","blooming_season","soil","item"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCACzB;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,WAAW,EAAE;AAHT,KADyB;AAAA;;AAOjC,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAAvB;AACA,UAAMJ,IAAI,GAAG,MAAMG,GAAG,CAACE,IAAJ,EAAnB;AACA,SAAKC,QAAL,CAAc;AACVP,MAAAA,UAAU,EAAEQ,kBAAkB,CAACC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,KAAvB,CAA6B,CAA7B,CAAD,CADpB;AAEVX,MAAAA,IAAI,EAAEA;AAFI,KAAd;AAIH;;AAKDY,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA,0CAAe,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGQ,KAAKC,KAAL,CAAWb,IAAX,CAAgBc,GAAhB,CAAoBC,eAAe,IAAI;AACnC,UAAIA,eAAe,CAACC,WAAhB,IAA+B,KAAKH,KAAL,CAAWd,UAA9C,EAA0D;AAEtD,cAAC,QAAD;AAAU,UAAA,MAAM,EAAE,KAAKc,KAAL,CAAWb,IAAX,CAAgBiB,OAAhB,CAAwBF,eAAxB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAGH;AACJ,KARD,CAHR,EAeQ,KAAKF,KAAL,CAAWb,IAAX,CAAgBkB,MAAhB,CAAuBC,MAAM,IAAIA,MAAM,CAACH,WAAP,IAAsB,KAAKH,KAAL,CAAWd,UAAlE,EAA8Ee,GAA9E,CAAkFK,MAAM,IACpF;AAAK,MAAA,GAAG,EAAEA,MAAM,CAACH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEG,MAAM,CAACC,WAAjB;AAA8B,MAAA,GAAG,EAAC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACH,WAAZ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBG,MAAM,CAACE,UAAvB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,MAAM,CAACG,KAAX,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAqBH,MAAM,CAACI,eAA5B,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,EAOKJ,MAAM,CAACK,IAAP,CAAYV,GAAZ,CAAgBW,IAAI,IACjB;AAAK,MAAA,GAAG,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAJ,CADJ,CADH,CAPL,CADJ,CAfR;AAAA;AAAA;AAAA,qmIADJ,CADJ;AA2CH;;AA/DgC;;AAkErC,eAAe7B,MAAf","sourcesContent":["import Fetch from 'isomorphic-unfetch';\r\nimport Layout from '../components/Layout';\r\nimport Comments from '../components/Comments'\r\n\r\nclass Flower extends React.Component {\r\n    state = {\r\n        searchTerm: \"\",\r\n        data: [],\r\n        flowerIndex: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await fetch('https://flowers-mock-data.firebaseio.com/flowers.json');\r\n        const data = await res.json();\r\n        this.setState({\r\n            searchTerm: decodeURIComponent(window.location.search.slice(8)),\r\n            data: data,\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div className=\"centerLayout\">\r\n\r\n                    {\r\n                        this.state.data.map(itemToFindIndex => {\r\n                            if (itemToFindIndex.common_name == this.state.searchTerm) {\r\n\r\n                                <Comments flower={this.state.data.indexOf(itemToFindIndex)} />\r\n                                /* this.setState({\r\n                                    flowerIndex: this.state.data.indexOf(itemToFindIndex)\r\n                                }); */\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                    {\r\n                        this.state.data.filter(flower => flower.common_name == this.state.searchTerm).map(flower => (\r\n                            <div key={flower.common_name}>\r\n                                <img src={flower.cover_image} alt=\"\" />\r\n                                <h1>{flower.common_name}</h1>\r\n                                <p>Latin name: {flower.latin_name}</p>\r\n                                <p>{flower.notes}</p>\r\n                                <p>Blooming season: {flower.blooming_season}</p>\r\n                                <h3>Soil:</h3>\r\n                                {flower.soil.map(item => (\r\n                                    <div key={item}>\r\n                                        <p>{item}</p>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <style jsx>{`\r\n                    img{\r\n                        max-width: 600px;\r\n                        max-height: 400px;\r\n                        margin-top: 2em;\r\n                    }\r\n                    `}</style>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Flower;"]},"metadata":{},"sourceType":"module"}
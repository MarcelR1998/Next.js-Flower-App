{"ast":null,"code":"/* import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { FirebaseContext } from './base';\r\n\r\nexport const UserContext = createContext(null);\r\n\r\nexport const UserProvider = ({ children }) => {\r\n    const firebase = useContext(FirebaseContext);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.auth().onAuthStateChanged((authUser) => {\r\n            if (!authUser) {\r\n                setUser(null);\r\n                return;\r\n            }\r\n\r\n            const dbUser = firebase.firestore().doc(`users/${authUser.uid}`);\r\n\r\n            dbUser.get().then((doc) => {\r\n                if (!doc.exists) {\r\n                    dbUser.set({});\r\n                }\r\n\r\n                dbUser.onSnapshot((snapshot) =>\r\n                    setUser({ ...authUser, ...snapshot.data() })\r\n                );\r\n            });\r\n        });\r\n\r\n        return () => unsubscribe();\r\n    }, [firebase]);\r\n\r\n    return <UserContext.Provider value={user}>{children}</UserContext.Provider>;\r\n};\r\n */","map":{"version":3,"sources":["C:/Users/Marcel/Documents/kodprojekt/arbetsprovMarcelWillAndSkill/components/Auth.js"],"names":[],"mappings":"AAAA","sourcesContent":["/* import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { FirebaseContext } from './base';\r\n\r\nexport const UserContext = createContext(null);\r\n\r\nexport const UserProvider = ({ children }) => {\r\n    const firebase = useContext(FirebaseContext);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.auth().onAuthStateChanged((authUser) => {\r\n            if (!authUser) {\r\n                setUser(null);\r\n                return;\r\n            }\r\n\r\n            const dbUser = firebase.firestore().doc(`users/${authUser.uid}`);\r\n\r\n            dbUser.get().then((doc) => {\r\n                if (!doc.exists) {\r\n                    dbUser.set({});\r\n                }\r\n\r\n                dbUser.onSnapshot((snapshot) =>\r\n                    setUser({ ...authUser, ...snapshot.data() })\r\n                );\r\n            });\r\n        });\r\n\r\n        return () => unsubscribe();\r\n    }, [firebase]);\r\n\r\n    return <UserContext.Provider value={user}>{children}</UserContext.Provider>;\r\n};\r\n */"]},"metadata":{},"sourceType":"script"}
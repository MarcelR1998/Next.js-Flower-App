{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport cookies from 'js-cookie';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport initFirebase from '../auth/initFirebase';\ninitFirebase();\n\nvar useUser = function useUser() {\n  _s();\n\n  var _useState = useState(),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var router = useRouter();\n\n  var logout = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", firebase.auth().signOut().then(function () {\n                // Sign-out successful.\n                cookies.remove('auth');\n                router.push('/auth');\n              })[\"catch\"](function (e) {\n                console.error(e);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function logout() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var cookie = cookies.get('auth');\n\n    if (!cookie) {\n      router.push('/');\n      return;\n    }\n\n    setUser(JSON.parse(cookie)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return {\n    user: user,\n    logout: logout\n  };\n};\n\n_s(useUser, \"vM+0cQpbmcqvR1155uZ1Pw51794=\", false, function () {\n  return [useRouter];\n});\n\nexport { useUser };","map":{"version":3,"sources":["C:/Users/Marcel/Documents/kodprojekt/arbetsprovMarcelWillAndSkill/utils/auth/useUser.js"],"names":["useEffect","useState","useRouter","cookies","firebase","initFirebase","useUser","user","setUser","router","logout","auth","signOut","then","remove","push","e","console","error","cookie","get","JSON","parse"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEAA,YAAY;;AAEZ,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBACML,QAAQ,EADd;AAAA,MACXM,IADW;AAAA,MACLC,OADK;;AAElB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AAEA,MAAMQ,MAAM;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,+CACJN,QAAQ,CACVO,IADE,GAEFC,OAFE,GAGFC,IAHE,CAGG,YAAM;AACR;AACAV,gBAAAA,OAAO,CAACW,MAAR,CAAe,MAAf;AACAL,gBAAAA,MAAM,CAACM,IAAP,CAAY,OAAZ;AACH,eAPE,WAQI,UAACC,CAAD,EAAO;AACVC,gBAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH,eAVE,CADI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANN,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAcAV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMmB,MAAM,GAAGhB,OAAO,CAACiB,GAAR,CAAY,MAAZ,CAAf;;AACA,QAAI,CAACD,MAAL,EAAa;AACTV,MAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ;AACA;AACH;;AACDP,IAAAA,OAAO,CAACa,IAAI,CAACC,KAAL,CAAWH,MAAX,CAAD,CAAP,CANY,CAOZ;AACH,GARQ,EAQN,EARM,CAAT;AAUA,SAAO;AAAEZ,IAAAA,IAAI,EAAJA,IAAF;AAAQG,IAAAA,MAAM,EAANA;AAAR,GAAP;AACH,CA7BD;;GAAMJ,O;UAEaJ,S;;;AA6BnB,SAASI,OAAT","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport cookies from 'js-cookie'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport initFirebase from '../auth/initFirebase'\r\n\r\ninitFirebase()\r\n\r\nconst useUser = () => {\r\n    const [user, setUser] = useState()\r\n    const router = useRouter()\r\n\r\n    const logout = async () => {\r\n        return firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                // Sign-out successful.\r\n                cookies.remove('auth')\r\n                router.push('/auth')\r\n            })\r\n            .catch((e) => {\r\n                console.error(e)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cookie = cookies.get('auth')\r\n        if (!cookie) {\r\n            router.push('/')\r\n            return\r\n        }\r\n        setUser(JSON.parse(cookie))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return { user, logout }\r\n}\r\n\r\nexport { useUser }"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Marcel\\\\Documents\\\\kodprojekt\\\\arbetsprovMarcelWillAndSkill\\\\components\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Comment from './Comment';\nimport { useEffect, useState } from 'react';\n\nvar Comments = function Comments() {\n  _s();\n\n  var _useState = useState([]),\n      comments = _useState[0],\n      setComments = _useState[1];\n\n  var _useState2 = useState(false),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(null),\n      index = _useState3[0],\n      setIndex = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      userComment = _useState4[0],\n      setUserComment = _useState4[1];\n\n  useEffect(function () {\n    _this.fetchComments();\n\n    setIndex(_this.props.index);\n  }, []); //Fetches comments, both on page load and when a comment is posted from client\n\n  fetchComments = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://flowers-mock-data.firebaseio.com/comments.json');\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              setComments(Object.entries(data));\n              setLoaded(true);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchComments() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  handleChange = function handleChange(e) {\n    setUserComment(e.target.value);\n  };\n\n  post = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(message) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(message !== \"\")) {\n                _context2.next = 3;\n                break;\n              }\n\n              _context2.next = 3;\n              return fetch(\"https://flowers-mock-data.firebaseio.com/comments/MarcelR1998/\".concat(_this.state.index, \".json\"), {\n                method: 'post',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  comment: message\n                })\n              }).then(function (res) {\n                console.log(res);\n\n                _this.fetchComments();\n\n                setUserComment(\"\");\n              })[\"catch\"](function (err) {\n                return console.error(err);\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function post(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"jsx-1212496929\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-1212496929\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Comments\"), __jsx(\"div\", {\n    id: \"commentForm\",\n    className: \"jsx-1212496929\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"textarea\", {\n    id: \"\",\n    cols: \"30\",\n    rows: \"2\",\n    value: _this.state.userComment,\n    onChange: _this.handleChange,\n    className: \"jsx-1212496929\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return _this.post(_this.state.userComment);\n    },\n    className: \"jsx-1212496929\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Comment\")), _this.state.loaded ? _this.state.comments.map(function (user) {\n    return user[1][_this.state.index] ? Object.entries(user[1][_this.state.index]).map(function (myComment, index) {\n      return myComment[1].comment ? __jsx(\"div\", {\n        key: user[0] + index,\n        className: \"jsx-1212496929\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }, __jsx(Comment, {\n        user: user[0],\n        comment: myComment[1].comment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      })) : null;\n    }) : null;\n  }) : null, __jsx(_JSXStyle, {\n    id: \"1212496929\",\n    __self: _this\n  }, \"#commentForm.jsx-1212496929{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;}textarea.jsx-1212496929{resize:none;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFyY2VsXFxEb2N1bWVudHNcXGtvZHByb2pla3RcXGFyYmV0c3Byb3ZNYXJjZWxXaWxsQW5kU2tpbGxcXGNvbXBvbmVudHNcXENvbW1lbnRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStEd0IsQUFHa0MsQUFJRCxZQUNELFdBQ2YsbURBTGUsV0FDZiIsImZpbGUiOiJDOlxcVXNlcnNcXE1hcmNlbFxcRG9jdW1lbnRzXFxrb2Rwcm9qZWt0XFxhcmJldHNwcm92TWFyY2VsV2lsbEFuZFNraWxsXFxjb21wb25lbnRzXFxDb21tZW50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21tZW50IGZyb20gJy4vQ29tbWVudCc7XHJcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5jb25zdCBDb21tZW50cyA9ICgpID0+IHtcclxuICAgIGNvbnN0IFtjb21tZW50cywgc2V0Q29tbWVudHNdID0gdXNlU3RhdGUoW10pO1xyXG4gICAgY29uc3QgW2xvYWRlZCwgc2V0TG9hZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICAgIGNvbnN0IFtpbmRleCwgc2V0SW5kZXhdID0gdXNlU3RhdGUobnVsbCk7XHJcbiAgICBjb25zdCBbdXNlckNvbW1lbnQsIHNldFVzZXJDb21tZW50XSA9IHVzZVN0YXRlKFwiXCIpO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5mZXRjaENvbW1lbnRzKCk7XHJcbiAgICAgICAgc2V0SW5kZXgodGhpcy5wcm9wcy5pbmRleClcclxuICAgIH0sIFtdKTtcclxuXHJcbiAgICAvL0ZldGNoZXMgY29tbWVudHMsIGJvdGggb24gcGFnZSBsb2FkIGFuZCB3aGVuIGEgY29tbWVudCBpcyBwb3N0ZWQgZnJvbSBjbGllbnRcclxuICAgIGZldGNoQ29tbWVudHMgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vZmxvd2Vycy1tb2NrLWRhdGEuZmlyZWJhc2Vpby5jb20vY29tbWVudHMuanNvbicpO1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gICAgICAgIHNldENvbW1lbnRzKE9iamVjdC5lbnRyaWVzKGRhdGEpKTtcclxuICAgICAgICBzZXRMb2FkZWQodHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgaGFuZGxlQ2hhbmdlID0gKGUpID0+IHtcclxuICAgICAgICBzZXRVc2VyQ29tbWVudChlLnRhcmdldC52YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcG9zdCA9IGFzeW5jIChtZXNzYWdlKSA9PiB7XHJcbiAgICAgICAgaWYgKG1lc3NhZ2UgIT09IFwiXCIpIHtcclxuICAgICAgICAgICAgYXdhaXQgZmV0Y2goYGh0dHBzOi8vZmxvd2Vycy1tb2NrLWRhdGEuZmlyZWJhc2Vpby5jb20vY29tbWVudHMvTWFyY2VsUjE5OTgvJHt0aGlzLnN0YXRlLmluZGV4fS5qc29uYCwge1xyXG4gICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsXHJcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgY29tbWVudDogbWVzc2FnZSB9KVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mZXRjaENvbW1lbnRzKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VXNlckNvbW1lbnQoXCJcIik7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKGVycikpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxoMj5Db21tZW50czwvaDI+XHJcbiAgICAgICAgICAgIDxkaXYgaWQ9XCJjb21tZW50Rm9ybVwiPlxyXG4gICAgICAgICAgICAgICAgPHRleHRhcmVhIGlkPVwiXCIgY29scz1cIjMwXCIgcm93cz1cIjJcIiB2YWx1ZT17dGhpcy5zdGF0ZS51c2VyQ29tbWVudH0gb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfSAvPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiB0aGlzLnBvc3QodGhpcy5zdGF0ZS51c2VyQ29tbWVudCl9PkNvbW1lbnQ8L2J1dHRvbj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIHt0aGlzLnN0YXRlLmxvYWRlZCA/IHRoaXMuc3RhdGUuY29tbWVudHMubWFwKHVzZXIgPT4gKFxyXG4gICAgICAgICAgICAgICAgdXNlclsxXVt0aGlzLnN0YXRlLmluZGV4XSA/IChcclxuICAgICAgICAgICAgICAgICAgICBPYmplY3QuZW50cmllcyh1c2VyWzFdW3RoaXMuc3RhdGUuaW5kZXhdKS5tYXAoKG15Q29tbWVudCwgaW5kZXgpID0+IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXlDb21tZW50WzFdLmNvbW1lbnQgP1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e3VzZXJbMF0gKyBpbmRleH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvbW1lbnQgdXNlcj17dXNlclswXX0gY29tbWVudD17bXlDb21tZW50WzFdLmNvbW1lbnR9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbnVsbFxyXG4gICAgICAgICAgICAgICAgICAgICkpXHJcbiAgICAgICAgICAgICAgICApIDogbnVsbFxyXG4gICAgICAgICAgICApKSA6IG51bGx9XHJcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgICNjb21tZW50Rm9ybXtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGV4dGFyZWEge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc2l6ZTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICk7XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb21tZW50czsiXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Marcel\\\\\\\\Documents\\\\\\\\kodprojekt\\\\\\\\arbetsprovMarcelWillAndSkill\\\\\\\\components\\\\\\\\Comments.js */\"));\n};\n\n_s(Comments, \"K1hC0AwUMiXOSjjOW1r/SDYxRCk=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/Marcel/Documents/kodprojekt/arbetsprovMarcelWillAndSkill/components/Comments.js"],"names":["Comment","useEffect","useState","Comments","comments","setComments","loaded","setLoaded","index","setIndex","userComment","setUserComment","fetchComments","props","fetch","res","json","data","Object","entries","handleChange","e","target","value","post","message","state","method","headers","body","JSON","stringify","comment","then","console","log","err","error","map","user","myComment"],"mappings":"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","sourcesContent":["import Comment from './Comment';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Comments = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [index, setIndex] = useState(null);\r\n    const [userComment, setUserComment] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        this.fetchComments();\r\n        setIndex(this.props.index)\r\n    }, []);\r\n\r\n    //Fetches comments, both on page load and when a comment is posted from client\r\n    fetchComments = async () => {\r\n        const res = await fetch('https://flowers-mock-data.firebaseio.com/comments.json');\r\n        const data = await res.json();\r\n        setComments(Object.entries(data));\r\n        setLoaded(true);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        setUserComment(e.target.value);\r\n    }\r\n\r\n    post = async (message) => {\r\n        if (message !== \"\") {\r\n            await fetch(`https://flowers-mock-data.firebaseio.com/comments/MarcelR1998/${this.state.index}.json`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ comment: message })\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.fetchComments();\r\n                    setUserComment(\"\");\r\n                })\r\n                .catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Comments</h2>\r\n            <div id=\"commentForm\">\r\n                <textarea id=\"\" cols=\"30\" rows=\"2\" value={this.state.userComment} onChange={this.handleChange} />\r\n                <button onClick={() => this.post(this.state.userComment)}>Comment</button>\r\n            </div>\r\n            {this.state.loaded ? this.state.comments.map(user => (\r\n                user[1][this.state.index] ? (\r\n                    Object.entries(user[1][this.state.index]).map((myComment, index) => (\r\n                        myComment[1].comment ?\r\n                            <div key={user[0] + index}>\r\n                                <Comment user={user[0]} comment={myComment[1].comment} />\r\n                            </div>\r\n                            : null\r\n                    ))\r\n                ) : null\r\n            )) : null}\r\n            <style jsx>{`\r\n                #commentForm{\r\n                    display: flex;\r\n                    width: 100%;\r\n                }\r\n                textarea {\r\n                    resize: none;\r\n                    width: 100%;\r\n                }\r\n                `}</style>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcel\\\\Documents\\\\kodprojekt\\\\arbetsprovMarcelWillAndSkill\\\\components\\\\Comments.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Comment from './Comment';\n\nvar Comments = /*#__PURE__*/function (_React$Component) {\n  _inherits(Comments, _React$Component);\n\n  var _super = _createSuper(Comments);\n\n  function Comments() {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      comments: [],\n      loaded: false,\n      index: null,\n      userComment: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchComments\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://flowers-mock-data.firebaseio.com/comments.json');\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n\n              _this.setState({\n                comments: Object.entries(data),\n                loaded: true\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      _this.setState({\n        userComment: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"post\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(message) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(message !== \"\")) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                _context2.next = 3;\n                return fetch(\"https://flowers-mock-data.firebaseio.com/comments/MarcelR1998/\".concat(_this.state.index, \".json\"), {\n                  method: 'post',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    comment: message\n                  })\n                }).then(function (res) {\n                  console.log(res);\n\n                  _this.fetchComments();\n\n                  _this.setState({\n                    userComment: \"\"\n                  });\n                })[\"catch\"](function (err) {\n                  return console.error(err);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.fetchComments();\n                this.setState({\n                  index: this.props.index\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //Fetches comments, both on page load and when a comment is posted from client\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        className: \"jsx-1212496929\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, __jsx(\"h2\", {\n        className: \"jsx-1212496929\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, \"Comments\"), __jsx(\"div\", {\n        id: \"commentForm\",\n        className: \"jsx-1212496929\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, __jsx(\"textarea\", {\n        id: \"\",\n        cols: \"30\",\n        rows: \"2\",\n        value: this.state.userComment,\n        onChange: this.handleChange,\n        className: \"jsx-1212496929\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.post(_this2.state.userComment);\n        },\n        className: \"jsx-1212496929\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, \"Comment\")), this.state.loaded ? this.state.comments.map(function (user) {\n        return user[1][_this2.state.index] ? Object.entries(user[1][_this2.state.index]).map(function (myComment, index) {\n          return myComment[1].comment ? __jsx(\"div\", {\n            key: user[0] + index,\n            className: \"jsx-1212496929\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }\n          }, __jsx(Comment, {\n            user: user[0],\n            comment: myComment[1].comment,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }\n          })) : null;\n        }) : null;\n      }) : null, __jsx(_JSXStyle, {\n        id: \"1212496929\",\n        __self: this\n      }, \"#commentForm.jsx-1212496929{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;}textarea.jsx-1212496929{resize:none;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFyY2VsXFxEb2N1bWVudHNcXGtvZHByb2pla3RcXGFyYmV0c3Byb3ZNYXJjZWxXaWxsQW5kU2tpbGxcXGNvbXBvbmVudHNcXENvbW1lbnRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdFNEIsQUFHa0MsQUFJRCxZQUNELFdBQ2YsbURBTGUsV0FDZiIsImZpbGUiOiJDOlxcVXNlcnNcXE1hcmNlbFxcRG9jdW1lbnRzXFxrb2Rwcm9qZWt0XFxhcmJldHNwcm92TWFyY2VsV2lsbEFuZFNraWxsXFxjb21wb25lbnRzXFxDb21tZW50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21tZW50IGZyb20gJy4vQ29tbWVudCc7XHJcblxyXG5jbGFzcyBDb21tZW50cyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICBzdGF0ZSA9IHtcclxuICAgICAgICBjb21tZW50czogW10sXHJcbiAgICAgICAgbG9hZGVkOiBmYWxzZSxcclxuICAgICAgICBpbmRleDogbnVsbCxcclxuICAgICAgICB1c2VyQ29tbWVudDogXCJcIixcclxuICAgIH1cclxuXHJcbiAgICBhc3luYyBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgICAgICB0aGlzLmZldGNoQ29tbWVudHMoKTtcclxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgaW5kZXg6IHRoaXMucHJvcHMuaW5kZXgsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9GZXRjaGVzIGNvbW1lbnRzLCBib3RoIG9uIHBhZ2UgbG9hZCBhbmQgd2hlbiBhIGNvbW1lbnQgaXMgcG9zdGVkIGZyb20gY2xpZW50XHJcbiAgICBmZXRjaENvbW1lbnRzID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2Zsb3dlcnMtbW9jay1kYXRhLmZpcmViYXNlaW8uY29tL2NvbW1lbnRzLmpzb24nKTtcclxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcclxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgY29tbWVudHM6IE9iamVjdC5lbnRyaWVzKGRhdGEpLFxyXG4gICAgICAgICAgICBsb2FkZWQ6IHRydWUsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgaGFuZGxlQ2hhbmdlID0gKGUpID0+IHtcclxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgdXNlckNvbW1lbnQ6IGUudGFyZ2V0LnZhbHVlXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBwb3N0ID0gYXN5bmMgKG1lc3NhZ2UpID0+IHtcclxuICAgICAgICBpZiAobWVzc2FnZSAhPT0gXCJcIikge1xyXG4gICAgICAgICAgICBhd2FpdCBmZXRjaChgaHR0cHM6Ly9mbG93ZXJzLW1vY2stZGF0YS5maXJlYmFzZWlvLmNvbS9jb21tZW50cy9NYXJjZWxSMTk5OC8ke3RoaXMuc3RhdGUuaW5kZXh9Lmpzb25gLCB7XHJcbiAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JyxcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBjb21tZW50OiBtZXNzYWdlIH0pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAudGhlbihyZXMgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcylcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZldGNoQ29tbWVudHMoKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXNlckNvbW1lbnQ6IFwiXCJcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcihlcnIpKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgIDxoMj5Db21tZW50czwvaDI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGlkPVwiY29tbWVudEZvcm1cIj5cclxuICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgaWQ9XCJcIiBjb2xzPVwiMzBcIiByb3dzPVwiMlwiIHZhbHVlPXt0aGlzLnN0YXRlLnVzZXJDb21tZW50fSBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiB0aGlzLnBvc3QodGhpcy5zdGF0ZS51c2VyQ29tbWVudCl9PkNvbW1lbnQ8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAge3RoaXMuc3RhdGUubG9hZGVkID8gdGhpcy5zdGF0ZS5jb21tZW50cy5tYXAodXNlciA9PiAoXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlclsxXVt0aGlzLnN0YXRlLmluZGV4XSA/IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmVudHJpZXModXNlclsxXVt0aGlzLnN0YXRlLmluZGV4XSkubWFwKChteUNvbW1lbnQsIGluZGV4KSA9PiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBteUNvbW1lbnRbMV0uY29tbWVudCA/XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e3VzZXJbMF0gKyBpbmRleH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb21tZW50IHVzZXI9e3VzZXJbMF19IGNvbW1lbnQ9e215Q29tbWVudFsxXS5jb21tZW50fSAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbnVsbFxyXG4gICAgICAgICAgICAgICAgICAgICAgICApKVxyXG4gICAgICAgICAgICAgICAgICAgICkgOiBudWxsXHJcbiAgICAgICAgICAgICAgICApKSA6IG51bGx9XHJcbiAgICAgICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICAjY29tbWVudEZvcm17XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRleHRhcmVhIHtcclxuICAgICAgICAgICAgICAgICAgICByZXNpemU6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvbW1lbnRzOyJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Marcel\\\\\\\\Documents\\\\\\\\kodprojekt\\\\\\\\arbetsprovMarcelWillAndSkill\\\\\\\\components\\\\\\\\Comments.js */\"));\n    }\n  }]);\n\n  return Comments;\n}(React.Component);\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/Marcel/Documents/kodprojekt/arbetsprovMarcelWillAndSkill/components/Comments.js"],"names":["Comment","Comments","comments","loaded","index","userComment","fetch","res","json","data","setState","Object","entries","e","target","value","message","state","method","headers","body","JSON","stringify","comment","then","console","log","fetchComments","err","error","props","handleChange","post","map","user","myComment","React","Component"],"mappings":"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","sourcesContent":["import Comment from './Comment';\r\n\r\nclass Comments extends React.Component {\r\n    state = {\r\n        comments: [],\r\n        loaded: false,\r\n        index: null,\r\n        userComment: \"\",\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.fetchComments();\r\n        this.setState({\r\n            index: this.props.index,\r\n        });\r\n    }\r\n\r\n    //Fetches comments, both on page load and when a comment is posted from client\r\n    fetchComments = async () => {\r\n        const res = await fetch('https://flowers-mock-data.firebaseio.com/comments.json');\r\n        const data = await res.json();\r\n        this.setState({\r\n            comments: Object.entries(data),\r\n            loaded: true,\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            userComment: e.target.value\r\n        })\r\n    }\r\n\r\n    post = async (message) => {\r\n        if (message !== \"\") {\r\n            await fetch(`https://flowers-mock-data.firebaseio.com/comments/MarcelR1998/${this.state.index}.json`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ comment: message })\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.fetchComments();\r\n                    this.setState({\r\n                        userComment: \"\"\r\n                    })\r\n                })\r\n                .catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Comments</h2>\r\n                <div id=\"commentForm\">\r\n                    <textarea id=\"\" cols=\"30\" rows=\"2\" value={this.state.userComment} onChange={this.handleChange} />\r\n                    <button onClick={() => this.post(this.state.userComment)}>Comment</button>\r\n                </div>\r\n                {this.state.loaded ? this.state.comments.map(user => (\r\n                    user[1][this.state.index] ? (\r\n                        Object.entries(user[1][this.state.index]).map((myComment, index) => (\r\n                            myComment[1].comment ?\r\n                                <div key={user[0] + index}>\r\n                                    <Comment user={user[0]} comment={myComment[1].comment} />\r\n                                </div>\r\n                                : null\r\n                        ))\r\n                    ) : null\r\n                )) : null}\r\n                <style jsx>{`\r\n                #commentForm{\r\n                    display: flex;\r\n                    width: 100%;\r\n                }\r\n                textarea {\r\n                    resize: none;\r\n                    width: 100%;\r\n                }\r\n                `}</style>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}
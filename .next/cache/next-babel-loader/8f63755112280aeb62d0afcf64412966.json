{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcel\\\\Documents\\\\kodprojekt\\\\arbetsprovMarcelWillAndSkill\\\\components\\\\SignUp.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState } from 'react';\nimport { FirebaseContext } from './base';\n\nconst SignUpForm = () => {\n  const firebase = useContext(FirebaseContext);\n  const {\n    0: formState,\n    1: setFormState\n  } = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setFormState({\n      email: '',\n      password: ''\n    });\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => setMessage('Success!')).catch(error => setMessage(`Failed: ${error.message}`));\n    /*         firebase.auth().signInWithEmailAndPassword(email, password); */\n  };\n\n  const onChange = e => setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onGoogleSignUp = e => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithRedirect(provider).catch(error => {\n      setMessage(`Failed: ${error.message}`);\n    });\n  };\n\n  const {\n    email,\n    password\n  } = formState;\n  const formValidation = email && password;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"email\", __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"password\", __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: !formValidation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Sign up\")), __jsx(\"button\", {\n    onClick: onGoogleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Sign up with Google\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, message));\n};\n\nexport default SignUpForm;","map":{"version":3,"sources":["C:/Users/Marcel/Documents/kodprojekt/arbetsprovMarcelWillAndSkill/components/SignUp.js"],"names":["React","useContext","useState","FirebaseContext","SignUpForm","firebase","formState","setFormState","email","password","message","setMessage","onSubmit","e","preventDefault","auth","createUserWithEmailAndPassword","then","catch","error","onChange","target","name","value","onGoogleSignUp","provider","GoogleAuthProvider","signInWithRedirect","formValidation"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { FirebaseContext } from './base';\r\n\r\nconst SignUpForm = () => {\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [formState, setFormState] = useState({ email: '', password: '' });\r\n    const [message, setMessage] = useState('');\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        setFormState({ email: '', password: '' })\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(() => setMessage('Success!'))\r\n            .catch(error => setMessage(`Failed: ${error.message}`))\r\n        /*         firebase.auth().signInWithEmailAndPassword(email, password); */\r\n    }\r\n\r\n\r\n    const onChange = e => setFormState({ ...formState, [e.target.name]: e.target.value });\r\n\r\n    const onGoogleSignUp = e => {\r\n\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithRedirect(provider)\r\n            .catch((error) => {\r\n                setMessage(`Failed: ${error.message}`)\r\n            })\r\n    };\r\n\r\n    const { email, password } = formState;\r\n\r\n    const formValidation = email && password;\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <label htmlFor=\"email\">email\r\n                    <input type=\"email\" name=\"email\" value={email} onChange={onChange} />\r\n                </label>\r\n                <label htmlFor=\"password\">password\r\n                    <input type=\"password\" name=\"password\" value={password} onChange={onChange} />\r\n                </label>\r\n                <button type=\"submit\" disabled={!formValidation}>Sign up</button>\r\n            </form>\r\n            <button onClick={onGoogleSignUp}>Sign up with Google</button>\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcel\\\\Documents\\\\kodprojekt\\\\arbetsprovMarcelWillAndSkill\\\\components\\\\Comments.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Comment from './Comment';\nimport { useUser } from '../utils/auth/useUser';\n\nvar Comments = /*#__PURE__*/function (_React$Component) {\n  _inherits(Comments, _React$Component);\n\n  var _super = _createSuper(Comments);\n\n  function Comments() {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      comments: [],\n      loaded: false,\n      index: null,\n      userComment: \"\",\n      user: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchComments\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://flowers-mock-data.firebaseio.com/comments.json');\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n\n              _this.setState({\n                comments: Object.entries(data),\n                loaded: true\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      _this.setState({\n        userComment: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"post\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(message) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(message !== \"\")) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                _context2.next = 3;\n                return fetch(\"https://flowers-mock-data.firebaseio.com/comments/MarcelR1998/\".concat(_this.state.index, \".json\"), {\n                  method: 'post',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    comment: message\n                  })\n                }).then(function (res) {\n                  console.log(res);\n\n                  _this.fetchComments();\n\n                  _this.setState({\n                    userComment: \"\"\n                  });\n                })[\"catch\"](function (err) {\n                  return console.error(err);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _useUser, user, logout;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.fetchComments();\n                _useUser = useUser(), user = _useUser.user, logout = _useUser.logout;\n                this.setState({\n                  index: this.props.index,\n                  user: user\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //Fetches comments, both on page load and when a comment is posted from client\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        className: \"jsx-1212496929\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, __jsx(\"h2\", {\n        className: \"jsx-1212496929\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, \"Comments\"), __jsx(\"div\", {\n        id: \"commentForm\",\n        className: \"jsx-1212496929\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, __jsx(\"textarea\", {\n        id: \"\",\n        cols: \"30\",\n        rows: \"2\",\n        value: this.state.userComment,\n        onChange: this.handleChange,\n        className: \"jsx-1212496929\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.post(_this2.state.userComment);\n        },\n        className: \"jsx-1212496929\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, \"Comment\")), this.state.loaded ? this.state.comments.map(function (user) {\n        return user[1][_this2.state.index] ? Object.entries(user[1][_this2.state.index]).map(function (myComment, index) {\n          return myComment[1].comment ? __jsx(\"div\", {\n            key: user[0] + index,\n            className: \"jsx-1212496929\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }\n          }, __jsx(Comment, {\n            user: user[0],\n            comment: myComment[1].comment,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }\n          })) : null;\n        }) : null;\n      }) : null, __jsx(_JSXStyle, {\n        id: \"1212496929\",\n        __self: this\n      }, \"#commentForm.jsx-1212496929{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;}textarea.jsx-1212496929{resize:none;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFyY2VsXFxEb2N1bWVudHNcXGtvZHByb2pla3RcXGFyYmV0c3Byb3ZNYXJjZWxXaWxsQW5kU2tpbGxcXGNvbXBvbmVudHNcXENvbW1lbnRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZFNEIsQUFHa0MsQUFJRCxZQUNELFdBQ2YsbURBTGUsV0FDZiIsImZpbGUiOiJDOlxcVXNlcnNcXE1hcmNlbFxcRG9jdW1lbnRzXFxrb2Rwcm9qZWt0XFxhcmJldHNwcm92TWFyY2VsV2lsbEFuZFNraWxsXFxjb21wb25lbnRzXFxDb21tZW50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21tZW50IGZyb20gJy4vQ29tbWVudCc7XHJcbmltcG9ydCB7IHVzZVVzZXIgfSBmcm9tICcuLi91dGlscy9hdXRoL3VzZVVzZXInXHJcblxyXG5jbGFzcyBDb21tZW50cyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICBzdGF0ZSA9IHtcclxuICAgICAgICBjb21tZW50czogW10sXHJcbiAgICAgICAgbG9hZGVkOiBmYWxzZSxcclxuICAgICAgICBpbmRleDogbnVsbCxcclxuICAgICAgICB1c2VyQ29tbWVudDogXCJcIixcclxuICAgICAgICB1c2VyOiBudWxsXHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICAgICAgdGhpcy5mZXRjaENvbW1lbnRzKCk7XHJcbiAgICAgICAgY29uc3QgeyB1c2VyLCBsb2dvdXQgfSA9IHVzZVVzZXIoKVxyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICBpbmRleDogdGhpcy5wcm9wcy5pbmRleCxcclxuICAgICAgICAgICAgdXNlcjogdXNlclxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvL0ZldGNoZXMgY29tbWVudHMsIGJvdGggb24gcGFnZSBsb2FkIGFuZCB3aGVuIGEgY29tbWVudCBpcyBwb3N0ZWQgZnJvbSBjbGllbnRcclxuICAgIGZldGNoQ29tbWVudHMgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vZmxvd2Vycy1tb2NrLWRhdGEuZmlyZWJhc2Vpby5jb20vY29tbWVudHMuanNvbicpO1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICBjb21tZW50czogT2JqZWN0LmVudHJpZXMoZGF0YSksXHJcbiAgICAgICAgICAgIGxvYWRlZDogdHJ1ZSxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBoYW5kbGVDaGFuZ2UgPSAoZSkgPT4ge1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICB1c2VyQ29tbWVudDogZS50YXJnZXQudmFsdWVcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHBvc3QgPSBhc3luYyAobWVzc2FnZSkgPT4ge1xyXG4gICAgICAgIGlmIChtZXNzYWdlICE9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIGF3YWl0IGZldGNoKGBodHRwczovL2Zsb3dlcnMtbW9jay1kYXRhLmZpcmViYXNlaW8uY29tL2NvbW1lbnRzL01hcmNlbFIxOTk4LyR7dGhpcy5zdGF0ZS5pbmRleH0uanNvbmAsIHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxyXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGNvbW1lbnQ6IG1lc3NhZ2UgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmV0Y2hDb21tZW50cygpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1c2VyQ29tbWVudDogXCJcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKGVycikpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgPGgyPkNvbW1lbnRzPC9oMj5cclxuICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJjb21tZW50Rm9ybVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD1cIlwiIGNvbHM9XCIzMFwiIHJvd3M9XCIyXCIgdmFsdWU9e3RoaXMuc3RhdGUudXNlckNvbW1lbnR9IG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHRoaXMucG9zdCh0aGlzLnN0YXRlLnVzZXJDb21tZW50KX0+Q29tbWVudDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5sb2FkZWQgPyB0aGlzLnN0YXRlLmNvbW1lbnRzLm1hcCh1c2VyID0+IChcclxuICAgICAgICAgICAgICAgICAgICB1c2VyWzFdW3RoaXMuc3RhdGUuaW5kZXhdID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuZW50cmllcyh1c2VyWzFdW3RoaXMuc3RhdGUuaW5kZXhdKS5tYXAoKG15Q29tbWVudCwgaW5kZXgpID0+IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG15Q29tbWVudFsxXS5jb21tZW50ID9cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17dXNlclswXSArIGluZGV4fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvbW1lbnQgdXNlcj17dXNlclswXX0gY29tbWVudD17bXlDb21tZW50WzFdLmNvbW1lbnR9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICkpXHJcbiAgICAgICAgICAgICAgICAgICAgKSA6IG51bGxcclxuICAgICAgICAgICAgICAgICkpIDogbnVsbH1cclxuICAgICAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgICNjb21tZW50Rm9ybXtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGV4dGFyZWEge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc2l6ZTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29tbWVudHM7Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Marcel\\\\\\\\Documents\\\\\\\\kodprojekt\\\\\\\\arbetsprovMarcelWillAndSkill\\\\\\\\components\\\\\\\\Comments.js */\"));\n    }\n  }]);\n\n  return Comments;\n}(React.Component);\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/Marcel/Documents/kodprojekt/arbetsprovMarcelWillAndSkill/components/Comments.js"],"names":["Comment","useUser","Comments","comments","loaded","index","userComment","user","fetch","res","json","data","setState","Object","entries","e","target","value","message","state","method","headers","body","JSON","stringify","comment","then","console","log","fetchComments","err","error","logout","props","handleChange","post","map","myComment","React","Component"],"mappings":"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","sourcesContent":["import Comment from './Comment';\r\nimport { useUser } from '../utils/auth/useUser'\r\n\r\nclass Comments extends React.Component {\r\n    state = {\r\n        comments: [],\r\n        loaded: false,\r\n        index: null,\r\n        userComment: \"\",\r\n        user: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.fetchComments();\r\n        const { user, logout } = useUser()\r\n        this.setState({\r\n            index: this.props.index,\r\n            user: user\r\n        });\r\n\r\n    }\r\n\r\n    //Fetches comments, both on page load and when a comment is posted from client\r\n    fetchComments = async () => {\r\n        const res = await fetch('https://flowers-mock-data.firebaseio.com/comments.json');\r\n        const data = await res.json();\r\n        this.setState({\r\n            comments: Object.entries(data),\r\n            loaded: true,\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            userComment: e.target.value\r\n        })\r\n    }\r\n\r\n    post = async (message) => {\r\n        if (message !== \"\") {\r\n            await fetch(`https://flowers-mock-data.firebaseio.com/comments/MarcelR1998/${this.state.index}.json`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ comment: message })\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.fetchComments();\r\n                    this.setState({\r\n                        userComment: \"\"\r\n                    })\r\n                })\r\n                .catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Comments</h2>\r\n                <div id=\"commentForm\">\r\n                    <textarea id=\"\" cols=\"30\" rows=\"2\" value={this.state.userComment} onChange={this.handleChange} />\r\n                    <button onClick={() => this.post(this.state.userComment)}>Comment</button>\r\n                </div>\r\n                {this.state.loaded ? this.state.comments.map(user => (\r\n                    user[1][this.state.index] ? (\r\n                        Object.entries(user[1][this.state.index]).map((myComment, index) => (\r\n                            myComment[1].comment ?\r\n                                <div key={user[0] + index}>\r\n                                    <Comment user={user[0]} comment={myComment[1].comment} />\r\n                                </div>\r\n                                : null\r\n                        ))\r\n                    ) : null\r\n                )) : null}\r\n                <style jsx>{`\r\n                #commentForm{\r\n                    display: flex;\r\n                    width: 100%;\r\n                }\r\n                textarea {\r\n                    resize: none;\r\n                    width: 100%;\r\n                }\r\n                `}</style>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcel\\\\Documents\\\\kodprojekt\\\\arbetsprovMarcelWillAndSkill\\\\pages\\\\signin.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext } from 'react';\nimport { FirebaseContext } from \"../components/base\";\nimport Layout from '../components/Layout';\n\nconst SignInPage = () => {\n  const firebase = useContext(FirebaseContext);\n  const {\n    0: formState,\n    1: setFormState\n  } = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: redirect,\n    1: setRedirect\n  } = useState(false);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      setFormState({\n        email: '',\n        password: ''\n      });\n      await firebase.auth().signInWithEmailAndPassword(email, password);\n      setMessage('Login success!');\n      setRedirect(true);\n      setIsLoading(false);\n    } catch (error) {\n      setMessage(`Failed: ${error.message}`);\n      setIsLoading(false);\n    }\n  };\n\n  const onChange = e => setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const {\n    email,\n    password\n  } = formState;\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"centerLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, redirect ? __jsx(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }) : __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, \"Sign in\"), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, \"Sign In\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, message))));\n};\n\nexport default SignInPage;","map":{"version":3,"sources":["C:/Users/Marcel/Documents/kodprojekt/arbetsprovMarcelWillAndSkill/pages/signin.js"],"names":["React","useState","useContext","FirebaseContext","Layout","SignInPage","firebase","formState","setFormState","email","password","message","setMessage","isLoading","setIsLoading","redirect","setRedirect","onSubmit","e","preventDefault","auth","signInWithEmailAndPassword","error","onChange","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { FirebaseContext } from \"../components/base\"\r\nimport Layout from '../components/Layout';\r\n\r\nconst SignInPage = () => {\r\n    const firebase = useContext(FirebaseContext);\r\n    const [formState, setFormState] = useState({ email: '', password: '' });\r\n    const [message, setMessage] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            setFormState({ email: '', password: '' });\r\n\r\n            await firebase.auth().signInWithEmailAndPassword(email, password);\r\n            setMessage('Login success!');\r\n            setRedirect(true);\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            setMessage(`Failed: ${error.message}`);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const onChange = (e) =>\r\n        setFormState({ ...formState, [e.target.name]: e.target.value });\r\n\r\n    const { email, password } = formState;\r\n\r\n    return (\r\n\r\n        <Layout >\r\n            <div className=\"centerLayout\">\r\n                {redirect ? (\r\n                    <Redirect to=\"/\" />\r\n                ) : (\r\n                        <>\r\n                            <h1>Sign in</h1>\r\n                            <form onSubmit={onSubmit}>\r\n                                <input type='text' name=\"email\" value={email} onChange={onChange} />\r\n                                <input type='password' name=\"password\" value={password} onChange={onChange} />\r\n                                <button type=\"submit\" disabled={isLoading}>\r\n                                    Sign In\r\n                            </button>\r\n                            </form>\r\n                            {/*                         <Link to={ROUTES.RESET_PASSWORD}>Forgot your password?</Link> */}\r\n                            <p>{message}</p>\r\n\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default SignInPage;\r\n"]},"metadata":{},"sourceType":"module"}
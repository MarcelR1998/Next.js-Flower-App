{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Marcel\\\\Documents\\\\kodprojekt\\\\arbetsprovMarcelWillAndSkill\\\\components\\\\FirebaseAuth.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* globals window */\nimport { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport cookie from 'js-cookie';\nimport initFirebase from '../utils/auth/initFirebase'; // Init the Firebase app.\n\ninitFirebase();\nvar firebaseAuthConfig = {\n  signInFlow: 'popup',\n  // Auth providers\n  // https://github.com/firebase/firebaseui-web#configure-oauth-providers\n  signInOptions: [{\n    provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    requireDisplayName: false\n  }],\n  signInSuccessUrl: '/',\n  credentialHelper: 'none',\n  callbacks: {\n    signInSuccessWithAuthResult: function () {\n      var _signInSuccessWithAuthResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, redirectUrl) {\n        var user, uid, email, xa, userData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = _ref.user;\n                // xa is the access token, which can be retrieved through\n                // firebase.auth().currentUser.getIdToken()\n                uid = user.uid, email = user.email, xa = user.xa;\n                userData = {\n                  id: uid,\n                  email: email,\n                  token: xa\n                };\n                cookie.set('auth', userData, {\n                  expires: 1\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function signInSuccessWithAuthResult(_x, _x2) {\n        return _signInSuccessWithAuthResult.apply(this, arguments);\n      }\n\n      return signInSuccessWithAuthResult;\n    }()\n  }\n};\n\nvar FirebaseAuth = function FirebaseAuth() {\n  _s();\n\n  // Do not SSR FirebaseUI, because it is not supported.\n  // https://github.com/firebase/firebaseui-web/issues/213\n  var _useState = useState(false),\n      renderAuth = _useState[0],\n      setRenderAuth = _useState[1];\n\n  useEffect(function () {\n    if (true) {\n      setRenderAuth(true);\n    }\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, renderAuth ? __jsx(StyledFirebaseAuth, {\n    uiConfig: firebaseAuthConfig,\n    firebaseAuth: firebase.auth(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }) : null);\n};\n\n_s(FirebaseAuth, \"Ar4U5ouqJl2OrtUFwf+zJoqK0bA=\");\n\n_c = FirebaseAuth;\nexport default FirebaseAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseAuth\");","map":{"version":3,"sources":["C:/Users/Marcel/Documents/kodprojekt/arbetsprovMarcelWillAndSkill/components/FirebaseAuth.js"],"names":["useEffect","useState","StyledFirebaseAuth","firebase","cookie","initFirebase","firebaseAuthConfig","signInFlow","signInOptions","provider","auth","EmailAuthProvider","PROVIDER_ID","requireDisplayName","signInSuccessUrl","credentialHelper","callbacks","signInSuccessWithAuthResult","redirectUrl","user","uid","email","xa","userData","id","token","set","expires","FirebaseAuth","renderAuth","setRenderAuth"],"mappings":";;;;;;;;;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CAEA;;AACAA,YAAY;AAEZ,IAAMC,kBAAkB,GAAG;AACvBC,EAAAA,UAAU,EAAE,OADW;AAEvB;AACA;AACAC,EAAAA,aAAa,EAAE,CACX;AACIC,IAAAA,QAAQ,EAAEN,QAAQ,CAACO,IAAT,CAAcC,iBAAd,CAAgCC,WAD9C;AAEIC,IAAAA,kBAAkB,EAAE;AAFxB,GADW,CAJQ;AAUvBC,EAAAA,gBAAgB,EAAE,GAVK;AAWvBC,EAAAA,gBAAgB,EAAE,MAXK;AAYvBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,2BAA2B;AAAA,kGAAE,uBAAiBC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,gBAAAA,IAAT,QAASA,IAAT;AACzB;AACA;AACQC,gBAAAA,GAHiB,GAGED,IAHF,CAGjBC,GAHiB,EAGZC,KAHY,GAGEF,IAHF,CAGZE,KAHY,EAGLC,EAHK,GAGEH,IAHF,CAGLG,EAHK;AAInBC,gBAAAA,QAJmB,GAIR;AACbC,kBAAAA,EAAE,EAAEJ,GADS;AAEbC,kBAAAA,KAAK,EAALA,KAFa;AAGbI,kBAAAA,KAAK,EAAEH;AAHM,iBAJQ;AASzBlB,gBAAAA,MAAM,CAACsB,GAAP,CAAW,MAAX,EAAmBH,QAAnB,EAA6B;AACzBI,kBAAAA,OAAO,EAAE;AADgB,iBAA7B;;AATyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADpB;AAZY,CAA3B;;AA6BA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACvB;AACA;AAFuB,kBAGa3B,QAAQ,CAAC,KAAD,CAHrB;AAAA,MAGhB4B,UAHgB;AAAA,MAGJC,aAHI;;AAIvB9B,EAAAA,SAAS,CAAC,YAAM;AACZ,cAAmC;AAC/B8B,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,UAAU,GACP,MAAC,kBAAD;AACI,IAAA,QAAQ,EAAEvB,kBADd;AAEI,IAAA,YAAY,EAAEH,QAAQ,CAACO,IAAT,EAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAKP,IANR,CADJ;AAUH,CAnBD;;GAAMkB,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["/* globals window */\r\nimport { useEffect, useState } from 'react'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport cookie from 'js-cookie'\r\nimport initFirebase from '../utils/auth/initFirebase'\r\n\r\n// Init the Firebase app.\r\ninitFirebase()\r\n\r\nconst firebaseAuthConfig = {\r\n    signInFlow: 'popup',\r\n    // Auth providers\r\n    // https://github.com/firebase/firebaseui-web#configure-oauth-providers\r\n    signInOptions: [\r\n        {\r\n            provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n            requireDisplayName: false,\r\n        },\r\n    ],\r\n    signInSuccessUrl: '/',\r\n    credentialHelper: 'none',\r\n    callbacks: {\r\n        signInSuccessWithAuthResult: async ({ user }, redirectUrl) => {\r\n            // xa is the access token, which can be retrieved through\r\n            // firebase.auth().currentUser.getIdToken()\r\n            const { uid, email, xa } = user\r\n            const userData = {\r\n                id: uid,\r\n                email,\r\n                token: xa,\r\n            }\r\n            cookie.set('auth', userData, {\r\n                expires: 1,\r\n            })\r\n        },\r\n    },\r\n}\r\n\r\nconst FirebaseAuth = () => {\r\n    // Do not SSR FirebaseUI, because it is not supported.\r\n    // https://github.com/firebase/firebaseui-web/issues/213\r\n    const [renderAuth, setRenderAuth] = useState(false)\r\n    useEffect(() => {\r\n        if (typeof window !== 'undefined') {\r\n            setRenderAuth(true)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {renderAuth ? (\r\n                <StyledFirebaseAuth\r\n                    uiConfig={firebaseAuthConfig}\r\n                    firebaseAuth={firebase.auth()}\r\n                />\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FirebaseAuth"]},"metadata":{},"sourceType":"module"}